---
import Button from "./ui/button.astro";
---

<form
  id="contact-form"
  class="needs-validation"
  novalidate
>
  <div class="mb-5">
    <input
      type="text"
      placeholder="Full Name"
      required
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
      name="name"
    />
    <div class="hidden invalid-feedback text-red-400 text-sm mt-1">
      Please provide your full name.
    </div>
  </div>

  <div class="mb-5">
    <label for="email_address" class="sr-only">Email Address</label>
    <input
      id="email_address"
      type="email"
      placeholder="Email Address"
      name="email"
      required
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    />
    <div class="hidden invalid-feedback text-red-400 text-sm mt-1">
      Please provide a valid email address.
    </div>
  </div>

  <div class="mb-3">
    <textarea
      name="message"
      required
      placeholder="Your Message"
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none h-36 focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    ></textarea>
    <div class="hidden invalid-feedback text-red-400 text-sm mt-1">
      Please enter your message.
    </div>
  </div>

  <Button type="submit" size="lg" block>Send Message</Button>

  <div id="result" class="mt-3 text-center"></div>
</form>

<script>
  const form = document.getElementById("contact-form") as HTMLFormElement;
  const result = document.getElementById("result");

  if (form && result) {
    form.addEventListener("submit", async function (e) {
      e.preventDefault();
      form.classList.add("was-validated");

      if (!form.checkValidity()) {
        const invalidElement = form.querySelector(":invalid") as HTMLElement;
        if (invalidElement) {
          invalidElement.focus();
        }
        return;
      }

      const formData = new FormData(form);
      const json = JSON.stringify(Object.fromEntries(formData));

      if (result) {
        result.innerHTML = "Sending...";
      }

      try {
        const response = await fetch("/api/send-email", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Accept: "application/json",
          },
          body: json,
        });

        const data = await response.json();

        if (response.ok) {
          result.classList.add("text-green-500");
          result.innerHTML = data.message;
        } else {
          throw new Error(data.error || "Failed to send message");
        }
      } catch (error) {
        console.error("Error:", error);
        result.classList.add("text-red-500");
        result.innerHTML = "Something went wrong!";
      }

      form.reset();
      form.classList.remove("was-validated");

      setTimeout(() => {
        if (result) {
          result.style.display = "none";
        }
      }, 5000);
    });
  }
</script>
